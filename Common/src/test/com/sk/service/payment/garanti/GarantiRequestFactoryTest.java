package com.sk.service.payment.garanti;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.mockito.Mock;import org.mockito.runners.MockitoJUnitRunner;import com.sk.util.builder.CreditCardPaymentMethodBuilder;import com.sk.util.http.HttpConnection;import com.sk.util.http.HttpConnectionFactory;import static org.mockito.Mockito.verify;import static org.mockito.Mockito.when;@RunWith(MockitoJUnitRunner.class)public class GarantiRequestFactoryTest {	private GarantiRequestFactory factory;	@Mock	private HttpConnectionFactory connectionFactory;	@Mock	private HttpConnection connection;	@Before	public void init() {		factory = new GarantiRequestFactory();		factory.setConnectionFactory(connectionFactory);		factory.setGarantiVPOSUrl("test pos");		factory.setTerminalId("terminal id");		factory.setMerchantID("merchant id");	}	@Test	public void shouldCreateRequestIncludeParameters() {		when(connectionFactory.createConnection("test pos")).thenReturn(connection);		factory.createRequest(new CreditCardPaymentMethodBuilder().build());		verify(connectionFactory).createConnection("test pos");		verify(connection).addParameter("marchantId", "merchant id");		verify(connection).addParameter("terminal", "terminal id");	}}