package com.sk.domain;import java.util.Date;import javax.persistence.CascadeType;import javax.persistence.Embedded;import javax.persistence.Entity;import javax.persistence.EnumType;import javax.persistence.Enumerated;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToOne;import javax.persistence.Table;import javax.persistence.Temporal;import javax.persistence.TemporalType;import com.sk.domain.coupon.Coupon;@Entity@Table(name = "user_order")public class Order extends BaseEntity {	private static final long serialVersionUID = -1070749922133859098L;	@Embedded	private ShoppingCart shoppingCart;	@Temporal(TemporalType.TIMESTAMP)	private Date orderDate = new Date();	@OneToOne(cascade = CascadeType.ALL, orphanRemoval = true)	@JoinColumn(name = "payment_method_id")	private PaymentMethod paymentMethod;	@ManyToOne	@JoinColumn(name = "shopper_id")	private Shopper shopper;	@ManyToOne(cascade=CascadeType.PERSIST)	private Coupon coupon;		@Enumerated(EnumType.STRING)	private OrderStatus orderStatus;		private String orderID;	public Double getTotalAmount(){		return shoppingCart.getTotalCost();	}		public boolean isUnderReview() {		return OrderStatus.UNDERREVIEW.equals(orderStatus);	}		public boolean isRejectRequested() {		return OrderStatus.REFUND_REQUESTED.equals(orderStatus);	}	public ShoppingCart getShoppingCart() {		return shoppingCart;	}	public void setShoppingCart(ShoppingCart shoppingCart) {		this.shoppingCart = shoppingCart;	}	public Date getOrderDate() {		return orderDate;	}	public void setOrderDate(Date orderDate) {		this.orderDate = orderDate;	}	public PaymentMethod getPaymentMethod() {		return paymentMethod;	}	public void setPaymentMethod(PaymentMethod paymentMethod) {		this.paymentMethod = paymentMethod;	}	public OrderStatus getOrderStatus() {		return orderStatus;	}	public void setOrderStatus(OrderStatus orderStatus) {		this.orderStatus = orderStatus;	}	public Shopper getShopper() {		return shopper;	}	public void setShopper(Shopper shopper) {		this.shopper = shopper;	}	public String getOrderID() {		return orderID;	}	public void setOrderID(String orderID) {		this.orderID = orderID;	}	@Override	public String toString() {		return "Order [shoppingCart=" + shoppingCart + ", orderDate=" + orderDate + ", paymentMethod=" + paymentMethod + ", shopper=" + shopper + ", orderStatus=" + orderStatus + ", orderID=" + orderID + "]";	}	public Coupon getCoupon() {		return coupon;	}	public void setCoupon(Coupon coupon) {		this.coupon = coupon;	}		public void useCoupon(Coupon coupon) {		coupon.setUsed(true);		this.setCoupon(coupon);	}	}
