package com.sk.frontend.web.controller;import java.util.Arrays;import java.util.List;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;import org.mockito.Mock;import org.mockito.runners.MockitoJUnitRunner;import org.springframework.web.servlet.ModelAndView;import com.sk.domain.Order;import com.sk.domain.OrderStatus;import com.sk.domain.Shopper;import com.sk.service.OrderService;import com.sk.service.ShopperService;import com.sk.util.builder.OrderBuilder;import com.sk.util.builder.ShopperBuilder;import static org.mockito.Mockito.when;import static org.hamcrest.MatcherAssert.assertThat;import static org.hamcrest.Matchers.equalTo;import static org.hamcrest.Matchers.hasItem;@RunWith(MockitoJUnitRunner.class)public class OrdersControllerTest {	private OrdersController controller;	@Mock	private OrderService orderService;	@Mock	private ShopperService shopperService;	@Before	public void init() {		controller = new OrdersController(orderService, shopperService);	}	@Test	public void shouldOrdersGetsAllOrdersByShopper() {		Shopper shopper = new ShopperBuilder().build();		Order order = new OrderBuilder().build();		when(shopperService.getStubShopper()).thenReturn(shopper);		when(orderService.getAllByShopper(shopper)).thenReturn(Arrays.asList(order));		ModelAndView mav = controller.orders();		List<Order> orders = (List<Order>) mav.getModel().get("orders");		assertThat(orders, hasItem(order));	}	@Test	public void shouldRejectOrder() {		Order order = new OrderBuilder().orderStatus(OrderStatus.UNDERREVIEW).build();		Shopper shopper = new ShopperBuilder().build();		when(orderService.findById(1l)).thenReturn(order);		when(shopperService.getStubShopper()).thenReturn(shopper);		when(orderService.getAllByShopper(shopper)).thenReturn(Arrays.asList(order));		ModelAndView mav = controller.rejectOrder(1l);		List<Order> orders = (List<Order>) mav.getModel().get("orders");		assertThat(orders, hasItem(order));		assertThat(orders.get(0).getOrderStatus(), equalTo(OrderStatus.REJECT_REQUESTED));		assertThat( (String) mav.getModel().get("orderRejectionMessage"), equalTo("Your order reject request is sent!"));			}}