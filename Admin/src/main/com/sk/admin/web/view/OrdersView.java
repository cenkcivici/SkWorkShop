package com.sk.admin.web.view;import java.util.ArrayList;import java.util.List;import javax.faces.bean.ManagedBean;import javax.faces.bean.ManagedProperty;import javax.faces.bean.ViewScoped;import javax.faces.model.SelectItem;import com.sk.domain.Order;import com.sk.domain.OrderStatus;import com.sk.service.OrderService;import com.sk.service.exception.ServiceException;@ViewScoped@ManagedBeanpublic class OrdersView extends BaseView {	private static final long serialVersionUID = -3028675164123618741L;	private Order selectedOrder;	@ManagedProperty("#{orderService}")	private transient OrderService orderService;	public void reject(Order order) {		try {			orderService.rejectOrder(order);			facesHelper.addInfoMessage("It is successfully rejected");		} catch (ServiceException exception) {			facesHelper.addErrorMessage("The reject has failed operation failed due to error: " + exception.getMessage());		}	}	public void complete(Order order) {		changeOrderStatus(order, OrderStatus.COMPLETED);	}	public void approveRefundRequest(Order order) {		try {			orderService.approveRefundRequest(order);			facesHelper.addInfoMessage("It is successfully refunded");		} catch (ServiceException exception) {			facesHelper.addErrorMessage("The refund has failed operation failed due to error: " + exception.getMessage());		}	}	private void changeOrderStatus(Order order, OrderStatus status) {		order.setOrderStatus(status);		orderService.save(order);	}	public void setOrderService(OrderService orderService) {		this.orderService = orderService;	}	public List<Order> getAll() {		return orderService.getAll();	}	public Order getSelectedOrder() {		return selectedOrder;	}	public void setSelectedOrder(Order selectedOrder) {		this.selectedOrder = selectedOrder;	}	public List<SelectItem> getOrderStatus() {		List<SelectItem> orderStatusList = new ArrayList<SelectItem>();		orderStatusList.add(new SelectItem("", "Select"));		List<SelectItem> fecthedOrderStatuses = facesHelper.toSelectItemListFromEnum(OrderStatus.class);		orderStatusList.addAll(fecthedOrderStatuses);		return orderStatusList;	}}